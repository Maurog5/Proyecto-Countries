{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagination from \"../Paginado/Pagination\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [SelectRegion, setSelectRegion] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage] = useState(10);\n  const [filteredByNameAndRegion, setFilteredByNameAndRegion] = useState([]);\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3001/countries\");\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const handleRegionChange = regionName => {\n    setSelectRegion(regionName);\n    setCurrentPage(1);\n  };\n  const handleFilteredByNameAndRegion = filteredList => {\n    setFilteredByNameAndRegion(filteredList);\n  };\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n\n  // Get current countries\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = filteredByNameAndRegion.slice(indexOfFirstCountry, indexOfLastCountry);\n\n  // Change page\n  const handlePageChange = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__Country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      countries: countries,\n      handleFilteredByNameAndRegion: handleFilteredByNameAndRegion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: handleRegionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading.........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }, this), currentCountries === null || currentCountries === void 0 ? void 0 : currentCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Region: \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)), filteredByNameAndRegion.length > 10 && /*#__PURE__*/_jsxDEV(Pagination, {\n        data: filteredByNameAndRegion,\n        itemsPerPage: countriesPerPage,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"XESpD95iWjEKd1EjWu4KH6YLJNU=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","FilterCountry","Pagination","SearchBar","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","SelectRegion","setSelectRegion","currentPage","setCurrentPage","countriesPerPage","filteredByNameAndRegion","setFilteredByNameAndRegion","getAllCountries","res","get","status","Error","data","message","handleRegionChange","regionName","handleFilteredByNameAndRegion","filteredList","indexOfLastCountry","indexOfFirstCountry","currentCountries","slice","handlePageChange","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","country","index","src","flag","alt","name","population","region","capital","length","itemsPerPage","onPageChange","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagination from \"../Paginado/Pagination\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [SelectRegion, setSelectRegion] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage] = useState(10);\n  const [filteredByNameAndRegion, setFilteredByNameAndRegion] = useState([]);\n\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3001/countries\");\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const handleRegionChange = (regionName) => {\n    setSelectRegion(regionName);\n    setCurrentPage(1);\n  };\n\n  const handleFilteredByNameAndRegion = (filteredList) => {\n    setFilteredByNameAndRegion(filteredList);\n  };\n\n  useEffect(() => {\n    getAllCountries();\n  }, []);\n\n  // Get current countries\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = filteredByNameAndRegion.slice(indexOfFirstCountry, indexOfLastCountry);\n\n  // Change page\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"all__Country__wrapper\">\n      <SearchBar\n        countries={countries}\n        handleFilteredByNameAndRegion={handleFilteredByNameAndRegion}\n      />\n      <div className=\"country__top\">\n        <div className=\"filter\">\n          <FilterCountry onSelect={handleRegionChange} />\n        </div>\n      </div>\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {currentCountries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n              <img src={country.flag} alt=\"png\" />\n            </div>\n            <div className=\"country__data\">\n              <h3>{country.name}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region: {country.region}</h6>\n              <h6>Capital: {country.capital}</h6>\n            </div>\n          </div>\n        ))}\n        {filteredByNameAndRegion.length > 10 && (\n          <Pagination\n            data={filteredByNameAndRegion}\n            itemsPerPage={countriesPerPage}\n            onPageChange={handlePageChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}