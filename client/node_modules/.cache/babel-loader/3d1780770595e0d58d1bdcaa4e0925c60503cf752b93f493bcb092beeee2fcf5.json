{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n\n      // Get flags for all countries\n      const flagRequests = data.map(country => {\n        return axios.get(`https://restcountries.com/v3.1/alpha/${country.alpha3Code}`);\n      });\n      const flagResponses = await Promise.all(flagRequests);\n      const flags = flagResponses.map(response => response.data.flags[1]);\n\n      // Add flag property to each country object\n      const countriesWithFlags = data.map((country, index) => {\n        return {\n          ...country,\n          flag: flags[index]\n        };\n      });\n      setCountries(countriesWithFlags);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await axios.get(`https://restcountries.com/v3/name/${countryName}`);\n      if (res.status !== 200) throw new Error(\"No se encontró ningún país\");\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await axios.get(`https://restcountries.com/v3/region/${regionName}`);\n      if (res.status !== 200) throw new Error(\"Hay un fallo \");\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    console.log(\"Hola\");\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__Country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading.........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this), countries === null || countries === void 0 ? void 0 : countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name.common\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Region: \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"fhz3OS7BVETzsc7B/TH4r51GfWQ=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchInput","FilterCountry","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","res","get","status","Error","data","flagRequests","map","country","alpha3Code","flagResponses","Promise","all","flags","response","countriesWithFlags","index","flag","message","getCountryByName","countryName","getCountryByRegion","regionName","console","log","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","src","alt","name","common","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries')\n\n      if(res.status !== 200) throw new Error(\"algo salio mal\");\n\n      const data = res.data;\n\n      // Get flags for all countries\n      const flagRequests = data.map(country => {\n        return axios.get(`https://restcountries.com/v3.1/alpha/${country.alpha3Code}`)\n      })\n      const flagResponses = await Promise.all(flagRequests)\n      const flags = flagResponses.map(response => response.data.flags[1])\n\n      // Add flag property to each country object\n      const countriesWithFlags = data.map((country, index) => {\n        return { ...country, flag: flags[index] }\n      })\n\n      setCountries(countriesWithFlags);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await axios.get(\n        `https://restcountries.com/v3/name/${countryName}`\n      );\n\n      if (res.status !== 200) throw new Error(\"No se encontró ningún país\");\n\n      const data = res.data;\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) => {\n    try {\n      const res = await axios.get(\n        `https://restcountries.com/v3/region/${regionName}`\n      );\n\n      if (res.status !== 200) throw new Error(\"Hay un fallo \");\n\n      const data = res.data;\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Hola\");\n    getAllCountries();\n  }, []);\n\n\n  return (\n    <div className=\"all__Country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n            <img src={country.flag} alt=\"png\"/>\n            </div>\n\n            <div className=\"country__data\">\n              <h3>{country.name.common}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region: {country.region}</h6>\n              <h6>Capital: {country.capital}</h6>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}