{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagination from \"../Paginado/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const countriesPerPage = 10;\n  const filteredByName = countries.filter(country => country.name.toLowerCase().startsWith(searchInput.toLowerCase()));\n  const filteredByRegion = selectedRegion === \"\" ? filteredByName : filteredByName.filter(country => country.region === selectedRegion);\n  const paginateCountries = (countries, currentPage, countriesPerPage) => {\n    const indexOfLastCountry = currentPage * countriesPerPage;\n    const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n    return countries.slice(indexOfFirstCountry, indexOfLastCountry);\n  };\n  const handleRegionChange = regionName => {\n    setSelectedRegion(regionName);\n    setCurrentPage(1);\n  };\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleSearchInputChange = e => {\n    setSearchInput(e.target.value);\n    setCurrentPage(1);\n  };\n  useEffect(() => {\n    const getAllCountries = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/countries\");\n        if (res.status !== 200) throw new Error(\"Something went wrong.\");\n        const data = res.data;\n        setCountries(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n    getAllCountries();\n  }, []);\n  const paginatedCountries = paginateCountries(filteredByRegion, currentPage, countriesPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FilterCountry, {\n        searchInput: searchInput,\n        handleSearchInputChange: handleSearchInputChange,\n        selectedRegion: selectedRegion,\n        handleRegionChange: handleRegionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        countriesPerPage: countriesPerPage,\n        totalCountries: filteredByRegion.length,\n        currentPage: currentPage,\n        handlePageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries-list\",\n        children: paginatedCountries.map(country => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/countries/${country.alpha3Code}`,\n          className: \"country-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Population:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), \" \", country.population.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Region:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), \" \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Capital:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), \" \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, country.alpha3Code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(AllCountries, \"Uv2BD+bOESgBLx1GwhsulZdIHSI=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","FilterCountry","Pagination","jsxDEV","_jsxDEV","Fragment","_Fragment","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","searchInput","setSearchInput","selectedRegion","setSelectedRegion","currentPage","setCurrentPage","countriesPerPage","filteredByName","filter","country","name","toLowerCase","startsWith","filteredByRegion","region","paginateCountries","indexOfLastCountry","indexOfFirstCountry","slice","handleRegionChange","regionName","handlePageChange","pageNumber","handleSearchInputChange","e","target","value","getAllCountries","res","get","status","Error","data","message","paginatedCountries","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCountries","length","className","map","to","alpha3Code","src","flag","alt","population","toLocaleString","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagination from \"../Paginado/Pagination\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const countriesPerPage = 10;\n\n  const filteredByName = countries.filter(country =>\n    country.name.toLowerCase().startsWith(searchInput.toLowerCase())\n  );\n\n  const filteredByRegion = selectedRegion === \"\"\n    ? filteredByName\n    : filteredByName.filter(country => country.region === selectedRegion);\n\n  const paginateCountries = (countries, currentPage, countriesPerPage) => {\n    const indexOfLastCountry = currentPage * countriesPerPage;\n    const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n    return countries.slice(indexOfFirstCountry, indexOfLastCountry);\n  };\n\n  const handleRegionChange = regionName => {\n    setSelectedRegion(regionName);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleSearchInputChange = e => {\n    setSearchInput(e.target.value);\n    setCurrentPage(1);\n  };\n\n  useEffect(() => {\n    const getAllCountries = async () => {\n      try {\n        const res = await axios.get(\"http://localhost:3001/countries\");\n        if (res.status !== 200) throw new Error(\"Something went wrong.\");\n\n        const data = res.data;\n        setCountries(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setError(error.message);\n      }\n    };\n    getAllCountries();\n  }, []);\n\n  const paginatedCountries = paginateCountries(\n    filteredByRegion,\n    currentPage,\n    countriesPerPage\n  );\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {!isLoading && !error && (\n        <>\n          <FilterCountry\n            searchInput={searchInput}\n            handleSearchInputChange={handleSearchInputChange}\n            selectedRegion={selectedRegion}\n            handleRegionChange={handleRegionChange}\n          />\n          <Pagination\n            countriesPerPage={countriesPerPage}\n            totalCountries={filteredByRegion.length}\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n          <div className=\"countries-list\">\n            {paginatedCountries.map(country => (\n              <Link\n                to={`/countries/${country.alpha3Code}`}\n                className=\"country-card\"\n                key={country.alpha3Code}\n              >\n                <img src={country.flag} alt={country.name} />\n                <h3>{country.name}</h3>\n                <p>\n                  <strong>Population:</strong>{\" \"}\n                  {country.population.toLocaleString()}\n                </p>\n                <p>\n                  <strong>Region:</strong> {country.region}\n                </p>\n                <p>\n                  <strong>Capital:</strong> {country.capital}\n                </p>\n              </Link>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AllCountries;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,UAAU,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMwB,gBAAgB,GAAG,EAAE;EAE3B,MAAMC,cAAc,GAAGb,SAAS,CAACc,MAAM,CAACC,OAAO,IAC7CA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,UAAU,CAACZ,WAAW,CAACW,WAAW,EAAE,CAAC,CACjE;EAED,MAAME,gBAAgB,GAAGX,cAAc,KAAK,EAAE,GAC1CK,cAAc,GACdA,cAAc,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACK,MAAM,KAAKZ,cAAc,CAAC;EAEvE,MAAMa,iBAAiB,GAAGA,CAACrB,SAAS,EAAEU,WAAW,EAAEE,gBAAgB,KAAK;IACtE,MAAMU,kBAAkB,GAAGZ,WAAW,GAAGE,gBAAgB;IACzD,MAAMW,mBAAmB,GAAGD,kBAAkB,GAAGV,gBAAgB;IACjE,OAAOZ,SAAS,CAACwB,KAAK,CAACD,mBAAmB,EAAED,kBAAkB,CAAC;EACjE,CAAC;EAED,MAAMG,kBAAkB,GAAGC,UAAU,IAAI;IACvCjB,iBAAiB,CAACiB,UAAU,CAAC;IAC7Bf,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,MAAMgB,gBAAgB,GAAGC,UAAU,IAAI;IACrCjB,cAAc,CAACiB,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,uBAAuB,GAAGC,CAAC,IAAI;IACnCvB,cAAc,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BrB,cAAc,CAAC,CAAC,CAAC;EACnB,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,MAAM4C,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAM3C,KAAK,CAAC4C,GAAG,CAAC,iCAAiC,CAAC;QAC9D,IAAID,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAEhE,MAAMC,IAAI,GAAGJ,GAAG,CAACI,IAAI;QACrBrC,YAAY,CAACqC,IAAI,CAAC;QAClBnC,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdD,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACD,KAAK,CAACmC,OAAO,CAAC;MACzB;IACF,CAAC;IACDN,eAAe,EAAE;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,kBAAkB,GAAGnB,iBAAiB,CAC1CF,gBAAgB,EAChBT,WAAW,EACXE,gBAAgB,CACjB;EAED,oBACEjB,OAAA,CAAAE,SAAA;IAAA4C,QAAA,GACGvC,SAAS,iBAAIP,OAAA;MAAA8C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EAClCzC,KAAK,iBAAIT,OAAA;MAAA8C,QAAA,EAAMrC;IAAK;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,EAC3B,CAAC3C,SAAS,IAAI,CAACE,KAAK,iBACnBT,OAAA,CAAAE,SAAA;MAAA4C,QAAA,gBACE9C,OAAA,CAACH,aAAa;QACZc,WAAW,EAAEA,WAAY;QACzBuB,uBAAuB,EAAEA,uBAAwB;QACjDrB,cAAc,EAAEA,cAAe;QAC/BiB,kBAAkB,EAAEA;MAAmB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvC,eACFlD,OAAA,CAACF,UAAU;QACTmB,gBAAgB,EAAEA,gBAAiB;QACnCkC,cAAc,EAAE3B,gBAAgB,CAAC4B,MAAO;QACxCrC,WAAW,EAAEA,WAAY;QACzBiB,gBAAgB,EAAEA;MAAiB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnC,eACFlD,OAAA;QAAKqD,SAAS,EAAC,gBAAgB;QAAAP,QAAA,EAC5BD,kBAAkB,CAACS,GAAG,CAAClC,OAAO,iBAC7BpB,OAAA,CAACL,IAAI;UACH4D,EAAE,EAAG,cAAanC,OAAO,CAACoC,UAAW,EAAE;UACvCH,SAAS,EAAC,cAAc;UAAAP,QAAA,gBAGxB9C,OAAA;YAAKyD,GAAG,EAAErC,OAAO,CAACsC,IAAK;YAACC,GAAG,EAAEvC,OAAO,CAACC;UAAK;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAC7ClD,OAAA;YAAA8C,QAAA,EAAK1B,OAAO,CAACC;UAAI;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACvBlD,OAAA;YAAA8C,QAAA,gBACE9C,OAAA;cAAA8C,QAAA,EAAQ;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,EAAC,GAAG,EAC/B9B,OAAO,CAACwC,UAAU,CAACC,cAAc,EAAE;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAClC,eACJlD,OAAA;YAAA8C,QAAA,gBACE9C,OAAA;cAAA8C,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,KAAC,EAAC9B,OAAO,CAACK,MAAM;UAAA;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACtC,eACJlD,OAAA;YAAA8C,QAAA,gBACE9C,OAAA;cAAA8C,QAAA,EAAQ;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,KAAC,EAAC9B,OAAO,CAAC0C,OAAO;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxC;QAAA,GAbC9B,OAAO,CAACoC,UAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAe1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA,gBAET;EAAA,gBACA;AAEP,CAAC;AAAC9C,EAAA,CAxGID,YAAY;AAAA4D,EAAA,GAAZ5D,YAAY;AA0GlB,eAAeA,YAAY;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}