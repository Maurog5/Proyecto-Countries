{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagina from \"./Pagina\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage, setCountriesPerPage] = useState(10);\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${regionName}`);\n      if (!res.ok) throw new Error(\"hay un fallo \");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n\n  // Obtener los paises para la p치gina actual\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = countries.slice(indexOfFirstCountry, indexOfLastCountry);\n\n  // Cambiar de p치gina\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__Country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading.........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }, this), currentCountries === null || currentCountries === void 0 ? void 0 : currentCountries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Region\", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"AekemU90dhRbkoHqiUnldGSjNUk=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchInput","FilterCountry","Pagina","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","currentPage","setCurrentPage","countriesPerPage","setCountriesPerPage","getAllCountries","res","get","status","Error","data","console","log","message","getCountryByName","countryName","fetch","ok","json","getCountryByRegion","regionName","indexOfLastCountry","indexOfFirstCountry","currentCountries","slice","paginate","pageNumber","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","country","index","src","flag","alt","name","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport Pagina from \"./Pagina\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [countriesPerPage, setCountriesPerPage] = useState(10);\n\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries')\n\n      if(res.status !== 200) throw new Error(\"algo salio mal\");\n\n      const data = res.data;\n\n      console.log(data);\n\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n\n      const data = await res.json();\n      setCountries(data);\n\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) => {\n    try {\n      const res= await fetch(`http://localhost:3001/countries/${regionName}`)\n      if (!res.ok) throw new Error(\"hay un fallo \")\n      const data = await res.json()\n      setCountries(data)\n    \n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setError(false)\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n\n  // Obtener los paises para la p치gina actual\n  const indexOfLastCountry = currentPage * countriesPerPage;\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\n  const currentCountries = countries.slice(indexOfFirstCountry, indexOfLastCountry);\n\n  // Cambiar de p치gina\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"all__Country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName}/>\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion}/>\n        </div>\n      </div>\n\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {currentCountries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n              <img src={country.flag} alt=\"png\"/>\n            </div>\n\n            <div className=\"country__data\">\n              <h3>{country.name}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region{country.region}</h6>\n      <h6>Capital: {country.capital}</h6>\n    </div>\n    \n  </div>\n))}\n  </div>\n  \n</div>\n);\n};\n\nexport default AllCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}