{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"h5\", {\n  id: \"paises\",\n  children: \" \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F Elige tu destino \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F \\u2708\\uFE0F\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 1\n}, this);\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${regionName}`);\n      if (!res.ok) throw new Error(\"hay un fallo \");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    class: \"paises\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all__Country__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: /*#__PURE__*/_jsxDEV(SearchInput, {\n            onSearch: getCountryByName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter\",\n          children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n            onSelect: getCountryByRegion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__bottom\",\n        children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading.........\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), countries === null || countries === void 0 ? void 0 : countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: country.flag,\n              alt: \"png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"country__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: country.name.common\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Population: \", country.population]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Region: \", country.region]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"Capital: \", country.capital]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"fhz3OS7BVETzsc7B/TH4r51GfWQ=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchInput","FilterCountry","jsxDEV","_jsxDEV","id","children","fileName","_jsxFileName","lineNumber","columnNumber","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","getAllCountries","res","get","status","Error","data","console","log","message","getCountryByName","countryName","fetch","ok","json","getCountryByRegion","regionName","class","className","onSearch","onSelect","map","country","index","src","flag","alt","name","common","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n<h5 id= \"paises\"> ✈️ ✈️ ✈️ ✈️ ✈️ ✈️\nElige tu destino \n✈️ ✈️ ✈️ ✈️ ✈️ ✈️   \n     </h5>\n\nconst AllCountries = () => {\nconst [countries, setCountries] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [error, setError] = useState(\"\");\n\nconst getAllCountries = async () => {\ntry {\nconst res = await axios.get('http://localhost:3001/countries')\n\n\n\n  if(res.status !== 200) throw new Error(\"algo salio mal\");\n\n  const data = res.data;\n\n  console.log(data);\n\n  setCountries(data);\n\n  setIsLoading(false);\n} catch (error) {\n  setIsLoading(false);\n  setError(error.message);\n}\n};\nconst getCountryByName = async (countryName) => {\n  try {\n    const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n\n    if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n\n    const data = await res.json();\n    setCountries(data);\n\n    setIsLoading(false);\n  } catch (error) {\n    setIsLoading(false);\n    setError(error.message);\n  }\n};\nconst getCountryByRegion = async (regionName) =>{\n  try {\n    const res= await fetch(`http://localhost:3001/countries/${regionName}`)\n    if (!res.ok) throw new Error(\"hay un fallo \")\n    const data = await res.json()\n    setCountries(data)\n  \n    setIsLoading(false)\n  } catch (error) {\nsetIsLoading(false)\nsetError(false)\n  }\n}\nuseEffect(() => {\n  console.log(\"hola\");\ngetAllCountries();\n}, []);\n\n\n  return (\n    <body class=\"paises\">\n  \n    <div className=\"all__Country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n            <img src={country.flag} alt=\"png\"/>\n            </div>\n\n            <div className=\"country__data\">\n              <h3>{country.name.common}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region: {country.region}</h6>\n              <h6>Capital: {country.capital}</h6>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n        </body>\n  );\n};\n\nexport default AllCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}