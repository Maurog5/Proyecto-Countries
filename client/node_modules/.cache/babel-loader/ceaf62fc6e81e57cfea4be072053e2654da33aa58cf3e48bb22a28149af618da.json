{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/region/${regionName}`);\n      if (!res.ok) throw new Error(\"hay un fallo \");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__Country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading.........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }, this), !isLoading && countries.length === 0 && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No se encontraron pa\\xEDses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 50\n      }, this), !isLoading && countries.length > 0 && selectedRegion && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: `Países en la región: ${selectedRegion}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 66\n      }, this), countries === null || countries === void 0 ? void 0 : countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name.common\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Region: \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"3JKMln6tXRXvqa6qEkhqZ+rNC0I=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchInput","FilterCountry","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","selectedRegion","setSelectedRegion","getAllCountries","res","get","status","Error","data","message","getCountryByName","countryName","fetch","ok","json","getCountryByRegion","regionName","console","log","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","length","map","country","index","src","flag","alt","name","common","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nconst AllCountries = () => {\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [selectedRegion, setSelectedRegion] = useState(\"\");\n\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if(res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByName = async (countryName) => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n\n  const getCountryByRegion = async (regionName) =>{\n    try {\n      const res= await fetch(`http://localhost:3001/countries/region/${regionName}`);\n      if (!res.ok) throw new Error(\"hay un fallo \")\n      const data = await res.json()\n      setCountries(data)\n    \n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setError(error.message)\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n\n  return (\n    <div className=\"all__Country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n        {!isLoading && countries.length === 0 && <h4>No se encontraron países</h4>}\n        {!isLoading && countries.length > 0 && selectedRegion && <h4>{`Países en la región: ${selectedRegion}`}</h4>}\n        {countries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n            <img src={country.flag} alt=\"png\"/>\n            </div>\n            <div className=\"country__data\">\n              <h3>{country.name.common}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region: {country.region}</h6>\n              <h6>Capital: {country.capital}</h6>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AllCountries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}