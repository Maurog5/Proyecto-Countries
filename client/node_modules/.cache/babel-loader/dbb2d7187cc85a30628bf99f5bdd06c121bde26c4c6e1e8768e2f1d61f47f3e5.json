{"ast":null,"code":"var _jsxFileName = \"/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllCountries = () => {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  //paginado\n  const [currenPage, setCurrentPage] = useState(1);\n  const [countriesPorPage, setCountriesPorPage] = useState(10);\n  const indexdelUltimoCountrie = currenPage * countriesPorPage; //10\n  const indexdelPrimerCountrie = indexdelUltimoCountrie - countriesPorPage;\n  const currentCountrie = AllCountries.slice(indexdelPrimerCountrie, indexdelUltimoCountrie);\n  const paginado = pagNumber => {\n    setCurrentPage(pagNumber);\n  };\n  const getAllCountries = async () => {\n    try {\n      const res = await axios.get('http://localhost:3001/countries');\n      if (res.status !== 200) throw new Error(\"algo salio mal\");\n      const data = res.data;\n      console.log(data);\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByName = async countryName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n      if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  };\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`http://localhost:3001/countries/${regionName}`);\n      if (!res.ok) throw new Error(\"hay un fallo \");\n      const data = await res.json();\n      setCountries(data);\n      setIsLoading(false);\n    } catch (error) {\n      setIsLoading(false);\n      setError(false);\n    }\n  };\n  useEffect(() => {\n    console.log(\"hola\");\n    getAllCountries();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all__Country__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(SearchInput, {\n          onSearch: getCountryByName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: /*#__PURE__*/_jsxDEV(FilterCountry, {\n          onSelect: getCountryByRegion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"country__bottom\",\n      children: [isLoading && !error && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Loading.........\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }, this), error && !isLoading && /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }, this), countries === null || countries === void 0 ? void 0 : countries.map((country, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"country__card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"country__data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Region: \", country.region]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: [\"Capital: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AllCountries, \"k3k2ek0kdONRQNx9FsgGhvJdR3c=\");\n_c = AllCountries;\nexport default AllCountries;\nvar _c;\n$RefreshReg$(_c, \"AllCountries\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchInput","FilterCountry","jsxDEV","_jsxDEV","AllCountries","_s","countries","setCountries","isLoading","setIsLoading","error","setError","currenPage","setCurrentPage","countriesPorPage","setCountriesPorPage","indexdelUltimoCountrie","indexdelPrimerCountrie","currentCountrie","slice","paginado","pagNumber","getAllCountries","res","get","status","Error","data","console","log","message","getCountryByName","countryName","fetch","ok","json","getCountryByRegion","regionName","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","map","country","index","src","flag","alt","name","population","region","capital","_c","$RefreshReg$"],"sources":["/Users/maurogatica/Desktop/PI-Countries-main-MAURO/client/src/components/AllCountries/AllCountries.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport SearchInput from \"../Search/SearchInput\";\nimport FilterCountry from \"../FilterCountry/FilterCountry\";\n\nconst AllCountries = () => {\nconst [countries, setCountries] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [error, setError] = useState(\"\");\n//paginado\nconst [currenPage,setCurrentPage]=useState(1)\nconst [countriesPorPage,setCountriesPorPage]= useState(10)\nconst indexdelUltimoCountrie = currenPage * countriesPorPage //10\nconst indexdelPrimerCountrie= indexdelUltimoCountrie - countriesPorPage\nconst currentCountrie = AllCountries.slice(indexdelPrimerCountrie,indexdelUltimoCountrie)\n\n const paginado = (pagNumber)=>{\n  setCurrentPage(pagNumber)\n }\nconst getAllCountries = async () => {\ntry {\nconst res = await axios.get('http://localhost:3001/countries')\n\n\n\n  if(res.status !== 200) throw new Error(\"algo salio mal\");\n\n  const data = res.data;\n\n  console.log(data);\n\n  setCountries(data);\n\n  setIsLoading(false);\n} catch (error) {\n  setIsLoading(false);\n  setError(error.message);\n}\n};\nconst getCountryByName = async (countryName) => {\n  try {\n    const res = await fetch(`http://localhost:3001/countries/${countryName}`);\n\n    if (!res.ok) throw new Error(\"No se encontro ningun pais\");\n\n    const data = await res.json();\n    setCountries(data);\n\n    setIsLoading(false);\n  } catch (error) {\n    setIsLoading(false);\n    setError(error.message);\n  }\n};\nconst getCountryByRegion = async (regionName) =>{\n  try {\n    const res= await fetch(`http://localhost:3001/countries/${regionName}`)\n    if (!res.ok) throw new Error(\"hay un fallo \")\n    const data = await res.json()\n    setCountries(data)\n  \n    setIsLoading(false)\n  } catch (error) {\nsetIsLoading(false)\nsetError(false)\n  }\n}\nuseEffect(() => {\n  console.log(\"hola\");\ngetAllCountries();\n}, []);\n\n\n  return (\n \n  \n    <div className=\"all__Country__wrapper\">\n      <div className=\"country__top\">\n        <div className=\"search\">\n          <SearchInput onSearch={getCountryByName} />\n        </div>\n\n        <div className=\"filter\">\n          <FilterCountry onSelect={getCountryByRegion} />\n        </div>\n      </div>\n      <div className=\"country__bottom\">\n        {isLoading && !error && <h4>Loading.........</h4>}\n        {error && !isLoading && <h4>{error}</h4>}\n\n        {countries?.map((country, index) => (\n          <div className=\"country__card\" key={index}>\n            <div className=\"country__img\">\n            <img src={country.flag} alt=\"png\"/>\n            </div>\n\n            <div className=\"country__data\">\n              <h3>{country.name}</h3>\n              <h6>Population: {country.population}</h6>\n              <h6>Region: {country.region}</h6>\n              <h6>Capital: {country.capital}</h6>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n       \n  );\n};\n\nexport default AllCountries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}